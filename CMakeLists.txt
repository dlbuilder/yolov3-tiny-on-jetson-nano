cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
set(NAME JetsonDetection)
project(${NAME} LANGUAGES CXX CUDA)
set(CMAKE_BUILD_TYPE "release")
find_package(CUDA REQUIRED)
file(GLOB_RECURSE cpp_source_files "${CMAKE_CURRENT_SOURCE_DIR}/Filters/*.cpp")
file(GLOB_RECURSE gpu_source_files "${CMAKE_CURRENT_SOURCE_DIR}/Filters/*.cu")
file(GLOB multimedia_class_source_files "/usr/src/jetson_multimedia_api/samples/common/classes/*.cpp")
include_directories(/usr/local/cuda/include)
include_directories(/usr/local/cuda/samples/common/inc)
include_directories(/usr/src/tensorrt/samples/common)
include_directories(/usr/include/aarch64-linux-gnu)
include_directories(/usr/src/jetson_multimedia_api/include)
include_directories(/usr/src/jetson_multimedia_api/include/libjpeg-8b)
include_directories(/usr/include/libdrm)
link_directories(/usr/local/cuda/lib64)
link_directories(/usr/lib/aarch64-linux-gnu/tegra)
link_directories(/usr/lib/aarch64-linux-gnu)
add_executable(${NAME} main.cpp ${cpp_source_files} ${gpu_source_files} ${multimedia_class_source_files})
target_link_libraries(${NAME} drm)
target_link_libraries(${NAME} cudart)
target_link_libraries(${NAME} cuda)
target_link_libraries(${NAME} nvbuf_utils)
target_link_libraries(${NAME} nvjpeg)
target_link_libraries(${NAME} v4l2)
target_link_libraries(${NAME} nvinfer)
target_link_libraries(${NAME} nvosd)
target_link_libraries(${NAME} EGL)
target_link_libraries(${NAME} GLESv2)
target_link_libraries(${NAME} X11)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/Models DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/build)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/Filters/TensorRTTinyYolov3PostProcessingFilter/DetectionClass.names DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/build)